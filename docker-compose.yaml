version: "3"
services:
  mongodb:
    image: "mongo"
    container_name: mongodb
    volumes:
      - data:/data/db
      - ./Database/bookstoreDocker-app:/backup/bookstoreDocker-app
    env_file:
      - ./env/mongo.env
    ports:
      - 28017:27017

  backend:
    build:
      context: ./Server
      dockerfile: Dockerfile
    #image: "bookStore-node"
    container_name: "bookStore_backend"
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3900:3900"
    volumes:
      - logs:/app/logs
      - ./Server:/app
      - /app/node_modules
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./Client
      dockerfile: Dockerfile
    #image: "bookStore-react"
    container_name: "bookStore_frontend"
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - ./Client/src:/app/src
    env_file:
      - ./env/frontend.env
    stdin_open: true
    tty: true
    depends_on:
      - backend
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=yahya_machat
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_MONGODB_URL=mongodb://yahya_machat:secret@mongodb:27017
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    depends_on:
      - mongodb
    restart: unless-stopped
    ports:
      - "8081:8081"

  book-app-nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    # build: nginx
    # image: nginx:1.24.0
    container_name: book-app-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      # - ./build/:/app/build/
      # - ./public/:/usr/share/nginx/html/public/
    

# Named Volumes Should Be Specified
volumes:
  data:
  logs:
